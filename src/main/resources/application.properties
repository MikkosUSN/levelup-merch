# ===== LevelUp Merch JDBC + Security Configuration =====

spring.application.name=levelup-merch
server.port=8080
spring.thymeleaf.cache=false

# MySQL connection
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/levelup_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Team note: optional dev convenience to auto-create DB if missing
# spring.datasource.url=jdbc:mysql://127.0.0.1:3306/levelup_db?createDatabaseIfNotExist=true

# Debug logging for JDBC operations
logging.level.org.springframework.jdbc.core=DEBUG
logging.level.org.springframework.data.jdbc=DEBUG

# Team note: run our schema script on startup so password_reset_tokens exists
# We keep our SQL in src/main/resources/db/levelup_db.sql
spring.sql.init.mode=always
spring.sql.init.platform=mysql
spring.sql.init.schema-locations=classpath:db/levelup_db.sql
spring.sql.init.encoding=UTF-8

# Team note: keep products visible—load safe seed data every start.
# Make sure the file below exists exactly at src/main/resources/db/seed_products.sql
spring.sql.init.data-locations=classpath:db/seed_products.sql

# Team note: guard—ensure no JPA DDL attempts (we use Spring Data JDBC)
spring.jpa.hibernate.ddl-auto=none

# Team note: dev helper to also show the reset link on the confirmation page
app.showResetLinkInUi=true
